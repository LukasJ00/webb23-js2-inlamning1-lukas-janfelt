{"version":3,"sources":["main.js"],"names":["playerName","playerScore","url","fetch","method","headers","body","JSON","stringify","name","score","response","ok","console","log","error","updateHighscore","json","highscore","displayHighscore","getHighscore","computerScore","playerNameInput","document","getElementById","rockButton","scissorsButton","paperButton","playerScoreDisplay","computerWins","choicesDisplay","addEventListener","event","target","value","preventDefault","playGame","determineWinner","playerChoice","computerChoice","choices","Math","floor","random","length","innerText","winner","highscoreArray","showWinner","highscoreUpdateThreshold","winnerName","setTimeout","resetGame","highscoreListElement","innerHTML","p","createElement","appendChild"],"mappings":"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","file":"main.72f7f51f.map","sourceRoot":"..\\src\\modules","sourcesContent":["// Grundl칛ggande variabler vid omstart\r\nlet playerScore = 0;\r\nlet computerScore = 0;\r\nlet playerName = \"\";\r\n\r\n// H칛mta alla HTML-element\r\nconst playerNameInput = document.getElementById(\"player-name\");\r\nconst rockButton = document.getElementById(\"rockBtn\");\r\nconst scissorsButton = document.getElementById(\"scissorsBtn\");\r\nconst paperButton = document.getElementById(\"paperBtn\");\r\nconst playerScoreDisplay = document.getElementById(\"playerScore\");\r\nconst computerWins = document.getElementById(\"computerWins\");\r\nconst choicesDisplay = document.getElementById(\"choices\"); // Elementet f칬r att visa valen\r\n\r\n// Hantera namninput\r\nplayerNameInput.addEventListener(\"input\", (event) => {\r\n  playerName = event.target.value;\r\n});\r\n\r\n// Hantera knappklick\r\nrockButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  playGame(\"sten\");\r\n});\r\nscissorsButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  playGame(\"sax\");\r\n});\r\npaperButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  playGame(\"p친se\");\r\n});\r\n\r\n// Funktion f칬r att avg칬ra vinnaren\r\nfunction determineWinner(playerChoice, computerChoice) {\r\n  if (\r\n    (playerChoice === \"sten\" && computerChoice === \"sax\") ||\r\n    (playerChoice === \"sax\" && computerChoice === \"p친se\") ||\r\n    (playerChoice === \"p친se\" && computerChoice === \"sten\")\r\n  ) {\r\n    return \"player\";\r\n  } else if (\r\n    (playerChoice === \"sax\" && computerChoice === \"sten\") ||\r\n    (playerChoice === \"p친se\" && computerChoice === \"sax\") ||\r\n    (playerChoice === \"sten\" && computerChoice === \"p친se\")\r\n  ) {\r\n    return \"computer\";\r\n  } else {\r\n    return \"tie\";\r\n  }\r\n}\r\n\r\n// Funktion f칬r att spela spelet\r\nfunction playGame(playerChoice) {\r\n  const choices = [\"sten\", \"sax\", \"p친se\"];\r\n  const computerChoice = choices[Math.floor(Math.random() * choices.length)];\r\n\r\n   // Visa spelarens och datorns val\r\n   choicesDisplay.innerText = `${playerName}: ${playerChoice} | Dator: ${computerChoice}`;\r\n\r\n  // Avg칬r vinnaren\r\n  const winner = determineWinner(playerChoice, computerChoice);\r\n  if (winner === \"player\") {\r\n    playerScore++;\r\n    // Visa po칛ngen\r\n    playerScoreDisplay.innerText = `${playerName} po칛ng: ${playerScore}`;\r\n\r\n    // Uppdatera highscore om spelaren f친r ett h칬gre po칛ng 칛n n친gon annan i listan\r\n    if (playerScore > 1 && playerScore > highscoreArray[0].score) {\r\n      updateHighscore(playerName, playerScore);\r\n    }\r\n  } else if (winner === \"computer\") {\r\n    computerScore++;\r\n  }\r\n\r\n  // Kolla om datorn vann\r\n  if (computerScore >= 1) {\r\n    showWinner(\"Dator\");\r\n  }\r\n}\r\n\r\n  // Efter att du har 칬kat spelarens po칛ng\r\n  // Kolla om spelaren har n친tt po칛ngtr칬skeln f칬r att uppdatera highscore\r\n  const highscoreUpdateThreshold = 1; // 츿ndra detta v칛rde f칬r att inkludera spelare med minst ett po칛ng\r\n  if (playerScore >= highscoreUpdateThreshold) {\r\n    // Kontrollera att playerName och playerScore har v칛rden innan du anropar updateHighscore\r\n    if (playerName && playerScore) {\r\n      updateHighscore(playerName, playerScore);\r\n    } else {\r\n      console.error(\"Ogiltigt namn eller po칛ngv칛rde\");\r\n    }\r\n  }\r\n\r\n\r\n// Funktion f칬r att visa vinnaren och starta om spelet efter 3 sekunder\r\nfunction showWinner(winnerName) {\r\n  computerWins.innerText = `${winnerName} vann 游땩 f칬rs칬k igen`;\r\n\r\n  // 칀terst칛ll spelet efter 3 sekunder\r\n  setTimeout(() => {\r\n    resetGame();\r\n  }, 3000); // 3000 millisekunder = 3 sekunder\r\n}\r\n\r\n// Funktion f칬r att 친terst칛lla spelet\r\nfunction resetGame() {\r\n  playerScore = 0;\r\n  computerScore = 0;\r\n  computerWins.innerText = \"\";\r\n  playerScoreDisplay.innerText = `${playerName} po칛ng: ${playerScore}`;\r\n  choicesDisplay.innerText = \"\";\r\n}\r\n\r\n// Anropa updateHighscore-funktionen n칛r spelaren n친r h칬g po칛ng\r\nasync function updateHighscore(playerName, playerScore) {\r\n  const url = 'http://localhost:4000/newscore';\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name: playerName, score: playerScore }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log('Highscore uppdaterad');\r\n      // Observera att vi inte anv칛nder highscoreArray h칛r\r\n      // eftersom vi inte har den uppdaterade listan n칛r vi anropar denna funktion\r\n    } else {\r\n      console.error('Kunde inte uppdatera highscore');\r\n    }\r\n  } catch (error) {\r\n    console.error('N친got gick fel:', error);\r\n  }\r\n}\r\n\r\n// Ladda och visa highscore-listan n칛r sidan laddas\r\nasync function getHighscore() {\r\n  const url = 'http://localhost:4000/highscore';\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      const highscore = await response.json();\r\n      displayHighscore(highscore);\r\n    } else {\r\n      console.error('Kunde inte h칛mta highscore');\r\n    }\r\n  } catch (error) {\r\n    console.error('N친got gick fel:', error);\r\n  }\r\n}\r\n\r\n// Funktion f칬r att visa highscore-listan\r\nfunction displayHighscore(highscoreArray) {\r\n  const highscoreListElement = document.getElementById(\"highscore-list\");\r\n\r\n  // Rensa tidigare highscore-lista\r\n  highscoreListElement.innerHTML = \"\";\r\n\r\n  for (const highscore of highscoreArray) {\r\n    const { name, score } = highscore;\r\n\r\n    const p = document.createElement(\"p\");\r\n    p.innerText = `${name}: ${score}`;\r\n\r\n    // L칛gg till p-elementet i highscore-listan\r\n    highscoreListElement.appendChild(p);\r\n  }\r\n}\r\n\r\n\r\n  getHighscore();\r\n"]}