{"version":3,"sources":["main.js"],"names":["playerName","playerScore","url","fetch","method","headers","body","JSON","stringify","score","response","status","console","log","error","postHighscore","computerScore","computerWins","innerText","playerScoreDisplay","document","getElementById","restartGame","json","highscoreArray","highscoreListContainer","innerHTML","length","forEach","highscore","index","name","listItem","createElement","appendChild","noHighscoreItem","getHighscore","playerNameInput","rockButton","scissorsButton","paperButton","addEventListener","event","target","value","preventDefault","playGame","determineWinner","playerChoice","computerChoice","choices","Math","floor","random","winner","showWinner","winnerName"],"mappings":"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","file":"main.72f7f51f.map","sourceRoot":"..\\src\\modules","sourcesContent":["// Grundv칛rden vid omstart\r\nlet playerScore = 0;\r\nlet computerScore = 0;\r\nlet playerName = \"\";\r\n\r\n// H칛mta alla HTML-element\r\nconst playerNameInput = document.getElementById(\"player-name\");\r\nconst rockButton = document.getElementById(\"rockBtn\");\r\nconst scissorsButton = document.getElementById(\"scissorsBtn\");\r\nconst paperButton = document.getElementById(\"paperBtn\");\r\nconst playerScoreDisplay = document.getElementById(\"playerScore\");\r\nconst computerWins = document.getElementById(\"computerWins\");\r\nconst highscoreListContainer = document.getElementById(\"highscore-list\"); // L칛gg till referens till highscore-listans container\r\n\r\n// Namninput event\r\nplayerNameInput.addEventListener(\"input\", (event) => {\r\n  playerName = event.target.value;\r\n});\r\n\r\n// Knappklick event\r\nrockButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  playGame(\"sten\");\r\n});\r\nscissorsButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  playGame(\"sax\");\r\n});\r\npaperButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  playGame(\"p친se\");\r\n});\r\n\r\n// Regler\r\nfunction determineWinner(playerChoice, computerChoice) {\r\n  if (\r\n    (playerChoice === \"sten\" && computerChoice === \"sax\") ||\r\n    (playerChoice === \"sax\" && computerChoice === \"p친se\") ||\r\n    (playerChoice === \"p친se\" && computerChoice === \"sten\")\r\n  ) {\r\n    return \"player\";\r\n  } else if (\r\n    (playerChoice === \"sax\" && computerChoice === \"sten\") ||\r\n    (playerChoice === \"p친se\" && computerChoice === \"sax\") ||\r\n    (playerChoice === \"sten\" && computerChoice === \"p친se\")\r\n  ) {\r\n    return \"computer\";\r\n  } else {\r\n    return \"tie\";\r\n  }\r\n}\r\n\r\nfunction playGame(playerChoice) {\r\n  const choices = [\"sten\", \"sax\", \"p친se\"];\r\n  const computerChoice = choices[Math.floor(Math.random() * choices.length)];\r\n\r\n  // Visa spelarens och datorns val\r\n  document.getElementById(\"choices\").innerText = `${playerName}: ${playerChoice} | Dator: ${computerChoice}`;\r\n\r\n  // Uppdatera po칛ngen baserat p친 vinnare\r\n  const winner = determineWinner(playerChoice, computerChoice);\r\n  if (winner === \"player\") {\r\n    playerScore++;\r\n  } else if (winner === \"computer\") {\r\n    computerScore++;\r\n  }\r\n\r\n  // Visa po칛ngen\r\n  playerScoreDisplay.innerText = `${playerName} po칛ng: ${playerScore}`;\r\n\r\n  // Kolla om datorn har vunnit\r\n  if (computerScore >= 1) {\r\n    showWinner(\"Dator\");\r\n  }\r\n}\r\n\r\n// Visa vinnaren\r\nfunction showWinner(winnerName) {\r\n  computerWins.innerText = `${winnerName} vann 游땩 f칬rs칬k igen`;\r\n\r\n  // Anropa funktionen f칬r att h칛mta och visa highscore-listan\r\n  getHighscore();\r\n}\r\n\r\n// Funktion f칬r att posta highscore till servern\r\nasync function postHighscore(playerName, playerScore) {\r\n  const url = \"http://localhost:4000/highscore\";\r\n\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ playerName, score: playerScore }), // Skicka spelarens namn och po칛ng till servern\r\n  });\r\n\r\n  if (response.status === 200) {\r\n    console.log(\"Highscore uppdaterad\");\r\n  } else {\r\n    console.error(\"N친got gick fel n칛r highscore skulle uppdateras\");\r\n  }\r\n}\r\n\r\n// Funktion som anropas n칛r spelet 칛r 칬ver och resultatet ska sparas i highscore-listan\r\nasync function restartGame() {\r\n  // Anropa postHighscore f칬r att spara resultatet i highscore-listan\r\n  await postHighscore(playerName, playerScore);\r\n\r\n  playerScore = 0;\r\n  computerScore = 0;\r\n  computerWins.innerText = \"\"; // Rensa meddelandet \"Datorn vann\"\r\n  playerScoreDisplay.innerText = `${playerName} po칛ng: ${playerScore}`;\r\n  document.getElementById(\"choices\").innerText = \"\";\r\n}\r\n\r\n// Funktion f칬r att h칛mta och visa highscore-listan\r\nasync function getHighscore() {\r\n  const url = \"http://localhost:4000/highscore\";\r\n\r\n  const response = await fetch(url);\r\n  const highscoreArray = await response.json();\r\n\r\n  // Rensa highscore-listans container innan du fyller den med nya resultat\r\n  highscoreListContainer.innerHTML = \"\";\r\n\r\n  // Kolla om det finns n친gra highscores att visa\r\n  if (highscoreArray && highscoreArray.length > 0) {\r\n    highscoreArray.forEach((highscore, index) => {\r\n      const { name, score } = highscore;\r\n\r\n      // Skapa ett li-element f칬r varje highscore\r\n      const listItem = document.createElement(\"li\");\r\n      listItem.innerText = `${index + 1}. ${name}: ${score}`;\r\n      highscoreListContainer.appendChild(listItem);\r\n    });\r\n  } else {\r\n    // Om det inte finns n친gra highscores, visa ett meddelande\r\n    const noHighscoreItem = document.createElement(\"li\");\r\n    noHighscoreItem.innerText = \"Inga high scores tillg칛ngliga.\";\r\n    highscoreListContainer.appendChild(noHighscoreItem);\r\n  }\r\n}\r\n\r\n// H칛mta highscore-listan n칛r sidan laddas\r\ngetHighscore();"]}