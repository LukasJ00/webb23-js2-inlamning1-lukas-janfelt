{"version":3,"sources":["main.js"],"names":["playerChoice","choices","computerChoice","Math","floor","random","length","choicesDisplay","innerText","playerName","winner","determineWinner","playerScore","playerScoreDisplay","computerScore","postPlayerData","showWinner","playGame","url","fetch","method","headers","body","JSON","stringify","name","score","response","ok","console","log","error","getHighscores","highscores","displayScoreList","updateHighscoreList","json","playerNameInput","document","getElementById","rockButton","scissorsButton","paperButton","computerWins","highscoreList","addEventListener","event","target","value","preventDefault","winnerName","updateScoreboard","setTimeout","resetGame","scoreArray","innerHTML","scores","li","createElement","appendChild","window"],"mappings":"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","file":"main.72f7f51f.map","sourceRoot":"..\\src\\modules","sourcesContent":["// Grundl칛ggande variabler vid omstart\r\nlet playerScore = 0;\r\nlet computerScore = 0;\r\nlet playerName = \"\";\r\n\r\n// H칛mta alla HTML-element\r\nconst playerNameInput = document.getElementById(\"player-name\");\r\nconst rockButton = document.getElementById(\"rockBtn\");\r\nconst scissorsButton = document.getElementById(\"scissorsBtn\");\r\nconst paperButton = document.getElementById(\"paperBtn\");\r\nconst playerScoreDisplay = document.getElementById(\"playerScore\");\r\nconst computerWins = document.getElementById(\"computerWins\");\r\nconst choicesDisplay = document.getElementById(\"choices\"); \r\nconst highscoreList = document.getElementById('highscore-list');\r\n\r\n// Hantera namninput\r\nplayerNameInput.addEventListener(\"input\", (event) => {\r\n  playerName = event.target.value;\r\n});\r\n\r\n// Hantera knappklick\r\nrockButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  playGame(\"sten\");\r\n});\r\nscissorsButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  playGame(\"sax\");\r\n});\r\npaperButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  playGame(\"p친se\");\r\n});\r\n\r\n// Funktion f칬r att avg칬ra vinnaren\r\nfunction determineWinner(playerChoice, computerChoice) {\r\n  if (\r\n    (playerChoice === \"sten\" && computerChoice === \"sax\") ||\r\n    (playerChoice === \"sax\" && computerChoice === \"p친se\") ||\r\n    (playerChoice === \"p친se\" && computerChoice === \"sten\")\r\n  ) {\r\n    return \"player\";\r\n  } else if (\r\n    (playerChoice === \"sax\" && computerChoice === \"sten\") ||\r\n    (playerChoice === \"p친se\" && computerChoice === \"sax\") ||\r\n    (playerChoice === \"sten\" && computerChoice === \"p친se\")\r\n  ) {\r\n    return \"computer\";\r\n  } else {\r\n    return \"tie\";\r\n  }\r\n}\r\n\r\n// Funktion f칬r att spela spelet\r\nasync function playGame(playerChoice) {\r\n  const choices = [\"sten\", \"sax\", \"p친se\"];\r\n  const computerChoice = choices[Math.floor(Math.random() * choices.length)];\r\n\r\n   // Visa spelarens och datorns val\r\n   choicesDisplay.innerText = `${playerName}: ${playerChoice} | Dator: ${computerChoice}`;\r\n\r\n  // Avg칬r vinnaren\r\n  const winner = determineWinner(playerChoice, computerChoice);\r\n  if (winner === \"player\") {\r\n    playerScore++;\r\n    // Visa po칛ngen\r\n    playerScoreDisplay.innerText = `${playerName} po칛ng: ${playerScore}`;\r\n  } else if (winner === \"computer\") {\r\n    computerScore++;\r\n    await postPlayerData(playerName, playerScore);\r\n  }\r\n\r\n  // Kolla om datorn vann\r\n  if (computerScore >= 1) {\r\n    showWinner(\"Dator\");\r\n\r\n  }\r\n}\r\n\r\n// Funktion f칬r att visa vinnaren och starta om spelet efter 3 sekunder\r\nfunction showWinner(winnerName) {\r\n  computerWins.innerText = `${winnerName} vann 游땩 f칬rs칬k igen`;\r\n  updateScoreboard();\r\n  // 칀terst칛ll spelet efter 3 sekunder\r\n  setTimeout(() => {\r\n    resetGame();\r\n  }, 3000); // 3000 millisekunder = 3 sekunder\r\n}\r\n\r\n// Funktion f칬r att 친terst칛lla spelet\r\nfunction resetGame() {\r\n  playerScore = 0;\r\n  computerScore = 0;\r\n  computerWins.innerText = \"\";\r\n  playerScoreDisplay.innerText = `${playerName} po칛ng: ${playerScore}`;\r\n  choicesDisplay.innerText = \"\";\r\n}\r\n\r\n// Anropa updateHighscore-funktionen n칛r spelaren n친r h칬g po칛ng\r\nasync function postPlayerData(playerName, playerScore) {\r\n  const url = 'http://localhost:4000/newscore';\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name: playerName, score: playerScore }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log('Highscore uppdaterad');\r\n      // Observera att vi inte anv칛nder highscoreArray h칛r\r\n      // eftersom vi inte har den uppdaterade listan n칛r vi anropar denna funktion\r\n    } else {\r\n      console.error('Kunde inte uppdatera highscore');\r\n    }\r\n  } catch (error) {\r\n    console.error('N친got gick fel:', error);\r\n  }\r\n}\r\n\r\n// Ladda och visa highscore-listan n칛r sidan laddas\r\nasync function updateHighscoreList() {\r\n \r\n  try {\r\n    // H칛mta den uppdaterade highscore-listan fr친n servern\r\n    const highscores = await getHighscores();\r\n\r\n    // Uppdatera highscore-listan p친 sk칛rmen\r\n    displayScoreList(highscores);\r\n} catch (error) {\r\n    console.error('Ett fel uppstod:', error);\r\n}\r\n}\r\n\r\n// Additional code for displaying highscore list\r\nasync function getHighscores() {\r\n  try {\r\n      const response = await fetch('http://localhost:4000/highscore');\r\n      if (response.ok) {\r\n          const highscores = await response.json();\r\n          return highscores;\r\n      } else {\r\n          console.error('Fel vid h칛mtning av highscore-lista');\r\n          return [];\r\n      }\r\n  } catch (error) {\r\n      console.error('Ett fel uppstod:', error);\r\n      return [];\r\n  }\r\n}\r\n\r\nfunction displayScoreList(scoreArray) {\r\n  highscoreList.innerHTML = ''; // Clear the existing list\r\n  // Loop through each 'scores' object in 'scoreArray'\r\n  for (const scores of scoreArray) {\r\n      const { name, score } = scores; // Destructure 'name' and 'score' from the current 'scores' object\r\n      const li = document.createElement(\"li\");\r\n      li.innerText = `${name}: ${score}`; // Set the text content of the 'li' element to display the player's name and score\r\n      highscoreList.appendChild(li);\r\n  }\r\n}\r\n\r\n// Add an event listener to execute the following code when the page finishes loading\r\nwindow.addEventListener('load', async () => {\r\n  // Call the 'getHighscores' function asynchronously to retrieve highscore data\r\n  const highscores = await getHighscores();\r\n  displayScoreList(highscores);\r\n});\r\n"]}